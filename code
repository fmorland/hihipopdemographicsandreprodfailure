#### import and sort data ####
rm(list = ls()) 

library(ggplot2)
library(dplyr)
library(readr)
eggs <- read_csv("formalin_eggs_all_7.csv", 
                 col_types = cols(dam = col_character(), 
                                  sample = col_character(), year = col_character()))
View(eggs)
View(eggs)

eggs$year<-as.factor(eggs$year)
eggs$cohort<-as.factor(eggs$cohort)
eggs$clutch<-as.factor(eggs$clutch)
eggs$fertilised<-as.numeric(eggs$fertilised)
eggs$outcome<-as.factor(eggs$outcome)
eggs$outcome2<-as.factor(eggs$outcome2)
eggs$outcome3<-as.factor(eggs$outcome3)

year_summaries <- read_csv("year_summaries.csv")

full_data<-

clutches <- eggs %>% group_by(year,dam,clutch) %>%
  summarise(eggs=n(),hatched.eggs=sum(hatched), fertilised.eggs=sum(fertilised), s.ratio=mean(sex.ratio), pop.size=mean(population.size))

clutches$unfertilised<-clutches$eggs - clutches$fertilised.eggs

clutches$unhatched<-clutches$eggs - clutches$hatched.eggs

clutches<-left_join(clutches, eggs[,c(1,23,24)])

## look at data



##### create table of pop size through years ####
fertility.rates<-eggs %>%
  group_by(year) %>%
  summarise(sum(fertilised, na.rm=TRUE)/length(fertilised))

#rename columns
names(fertility.rates)<-c("year", "fertility.rate")

#make same type for merge
fertility.rates$year<-as.factor(fertility.rates$year)
year_summaries$year<-as.factor(year_summaries$year)

#merge
year_summaries<-left_join(year_summaries,fertility.rates, by="year")

# scale pop size 
year_summaries$population.size<-year_summaries$population.size/100

# seperate out sex ratio and pop size for plot
sex_size<-data.frame(year_summaries$year, year_summaries$sex.ratio, year_summaries$population.size)
names(sex_size)<-c("year", "sex.ratio", "population.size")

library(reshape2)
melted_sex_size<-melt(sex_size)

#### plot sex ratio vs population size  ####
melted_sex_size1<-melted_sex_size %>%
  filter(year!="2012")
pop_sex_plot<-ggplot(data=melted_sex_size1, aes(x=year, y=value, colour=variable))+
  geom_point(aes(colour=variable), size=2)+
  geom_line(aes(colour=variable, group=variable), size=1)+
  theme_minimal()+
  xlab("Year")+
  ylab("Value")+
scale_color_manual(labels = c("Sex Ratio (males/females)", "Population Size (/100)"), 
                    values = c("#f9bd3b", "#e46464"))+
  theme(legend.title=element_blank())

pop_sex_plot  

#scale_colour_viridis_d(option="H",labels = c("Sex Ratio (males/females)", "Population Size (/100)"))
  

# test correlation between population size and sex ratio 
cor.test(year_summaries$population.size, year_summaries$sex.ratio)
# significant negative correlation, p = 0.006, r = -0.76

names(pop.size.)<-c("year","pop.size","number.females","number.males")
#sex ratio and pop size through years 

#### fertility rate vs sex ratio ####

# exclude NAs from data, make new dataframe with only variables of interest

model.eggs<-data.frame(eggs$dam, eggs$outcome,eggs$fertilised, eggs$sex.ratio, eggs$population.size, eggs$hatched)
#rename columns
names(model.eggs)<-c("dam", "outcome", "fertilised", "sex.ratio", "population.size", "hatched")
# remove NA values
model.eggs<-na.omit(model.eggs)
model.eggs$outcome<-as.factor(model.eggs$outcome)

model.eggs$fertilised<-as.factor(model.eggs$fertilised)

cdplot.infert<-cdplot(as.factor(model.eggs$fertilised) ~ model.eggs$sex.ratio, 
      ylevels=c("1","0"), 
       col = c("#f0f921", "#e16462"), 
       xlab="Sex Ratio (males/females)",
       ylab="Density Distribution", 
       ylim=c(0,1))
       #yaxlabels = c(""))

pdf(file="cdplotinfert.pdf")
model.eggs$outcome<-as.factor(model.eggs$outcome)
par(cex=1)

cdplot(as.factor(outcome) ~ population.size, data=eggs, xlab="Sex Ratio (males:females)",
       ylevels=c("fledgling", "nestling" , "late development", "mid development", 
                 "early development", "infertile"), ylab="Egg Outcome", ylim=c(0,1), 
       col=c("#f0f921", "#fca636", "#e16462", "#b12a90", "#6a00a8","#0d0887"), 
       yaxlabels = c("6","5","4","3","2","1"))

cdplot(as.factor(outcome3) ~ population.size, data=eggs, xlab="Sex Ratio (males:females)",
       ylevels=c("Unfertilised", "Unhatched" , "Hatched"), ylab="Density Distribution", ylim=c(0,1), 
       col=c("#f0f921", "#e16462", "#b12a90"), 
       yaxlabels = c("6","5","4","3","2","1"))

cdplot.hatch<-cdplot(as.factor(model.eggs$hatched) ~ model.eggs$sex.ratio, 
                      ylevels=c("1","0"), 
                      col = c("#e16462", "#790da4"),
                      xlab="Sex Ratio (males/females)",
                      ylab="Density Distribution", 
                      ylim=c(0,1))
#yaxlabels = c(""))


### hatching success vs sex ratio

cdplot(as.factor(model.eggs$hatched) ~ model.eggs$sex.ratio, 
       ylevels=c("0","1"), 
       col = c("#e16462", "#790da4"), 
       xlab="Sex Ratio (males/females)",
       ylab="Density Distribution")
  #     ylim=c(0,1))
#yaxlabels = c(""))

library(ggplot2)
ggplot(model.eggs, aes(x=sex.ratio,y=..count.., fill=outcome))+
  geom_density(position="fill")

ggplot(data=clutches, aes(x=s.ratio,y=(hatched.eggs/eggs)))+ 
  geom_point()+
  stat_smooth(method="lm")

#### summarise data ####

sex.ratio.<-eggs %>%
  group_by(year) %>%
  summarise(mean(sex.ratio))
names(sex.ratio.)<-c("year", "sex.ratio")

ggplot(data=year_summaries, aes(x=year, y=fertility.rate))+
  geom_col()

library(viridis)

write.csv(summary1, file="summary1.csv")
summary1<-eggs %>%
  group_by(year) %>%
  summarise(total=n())%>%
  group_by(outcome)%>%
  summarise(percent=n()/total)

summary2<-filter(eggs, outcome(! . %in%("fledged successfully", "failed nestling")) %>%
  group_by(year,outcome) %>%
  summarise(count=n()))

summary2<-left_join(summary1,summary2)
summary2$percent<-(summary2$count/summary2$total)*100

stacked.outcome.plot<-ggplot(data=subset(eggs, !is.na(outcome)), 
       aes(x=year,fill=factor(outcome, levels=c("fledged successfully", "failed nestling", "failed in late embryo development", "failed in mid embryo development",
                                                                   "failed in early embryo development", "infertile")))) + geom_bar(position="fill")+
  theme_minimal()+
  ylab("Proportion of Eggs")+
  labs(fill="Outcome")+
  scale_fill_viridis_d(labels=c("Fledged Successfully", "Nestling Mortality", "Late Embryo Mortality", "Mid Embryo Mortality", "Early Embryo Mortality", "Infertile"),
  option="C", direction=1)+
  
  theme(axis.title.x = element_blank(),
        axis.ticks.x = element_blank(),
        axis.text.x = element_blank(),
        legend.title = element_blank())

stacked.outcome.plot

library(gridExtra)

grid.arrange(stacked.outcome.plot,pop_sex_plot)
## lines look a little off

library(cowplot)

plot_grid(stacked.outcome.plot,pop_sex_plot, nrow=2, align="v")

# change levels to get order right in plot

eggs$outcome<-as.factor(eggs$outcome)

levels(eggs$outcome)<-c("fledgling","nestling","late development","mid development","early development","infertile" )

#### plot to compare what was thought of as infertile before ####

beforeandnow <- read_csv("before and now summary3.csv")

beforeandnow$cause<-as.factor(beforeandnow$cause)

actualassumedplot<-ggplot(data=beforeandnow, 
       aes(x=as.factor(year),y=count,
           fill=factor(cause, levels=c("unhatched eggs","previously assumed infertile", "truly infertile"))))+ 
  geom_col(position=position_dodge(width=0.7), width=1)+
  theme_minimal()+
  theme(legend.title=element_blank(),
        axis.title.x = element_blank(),
        axis.ticks.x = element_blank(),
        axis.text.x = element_blank())+
  xlab("Year")+
  ylab("Count")+
  scale_fill_manual(labels = c("Total Unhatched Eggs","Assumed Infertile/Unknown", "Actually Infertile"), 
                     values = c("#780fa5", "#e46464", "#f0f921"))

actualassumedplot
library(cowplot)
# make plot with all three panes
plot_grid(actualassumedplot,stacked.outcome.plot,pop_sex_plot, nrow=3, align="v", labels="auto")

#### plot of sex ratios at every stage of failures ####

sex<-data.frame(eggs$outcome2,eggs$sex)
names(sex)<-c("outcome2","sex")
sex<-na.omit(sex)

sex<-sex %>%
  group_by(outcome2,sex) %>%
  summarise(n=n())

sex<-sex[!(sex$outcome==("infertile")),]


p <- ggplot()
p <- p + geom_col(data=sex, aes(x=outcome2, y=n, fill=sex), position="fill")
p <- p + scale_fill_manual(values=c("#0d0887", "#b12a90"), labels=c("Female","Male"))
p <- p + geom_hline(yintercept=0.5, linetype="dashed", color = "#f0f921", size=1)
#p <- p + geom_point(data = filter(outcomeandsex, sex=="F"),colour="#f9bd3b",size=3,aes(x=outcome, y=sex_ratio))
#p <- p + geom_line(data = filter(outcomeandsex, sex=="F"),colour="#f9bd3b",size=1.5,group=1, mapping= aes(x=outcome, y=sex_ratio, colour="#f9bd3b")) 
#p <- p + scale_y_continuous("Proportion of Mortality", sec.axis = sec_axis(~ . * 1, name = "Sex Ratio(males/females)"))
p <- p + theme_minimal() + scale_x_discrete(name="Outcome",labels=c("Early EM","Mid EM","Late EM","Nestling Mort.", "Fledling Mort.", "Overall Mort."))
p <- p + theme(legend.title=element_blank(),
      axis.title.x = element_blank(),
      axis.ticks.x = element_blank(),
      axis.text.x = element_blank())
p <- p + theme(axis.text.y = element_text(margin = margin(b=3)))
p <- p + ylab("Proportion")

sexratios2<-eggs %>%
  group_by(outcome3,sex,year) %>%
  summarise(n=n())


sexratios1<-eggs %>%
  group_by(sex,year) %>%
  summarise(n=n())e
write.csv(sexratios1, "sexratios1.csv")

p <- ggplot()
p <- p + geom_col(data=filter(outcomeandsex,sex=="F"), aes(x=outcome, y=count, fill=outcome), position=position_nudge(x=0.35),width=0.5)
p <- p + geom_col(data=filter(outcomeandsex,sex=="M"), aes(x=outcome, y=count), position=position_nudge(x=-0.25),width=0.5)
p <- p + scale_fill_manual(name="Sex",values=c("#0b0b83","#b12a90"))
p <- p + geom_point(data = filter(outcomeandsex, sex=="F"),colour="#f9bd3b",size=2,aes(x=outcome, y=sex_ratio))
p <- p + geom_line(data = filter(outcomeandsex, sex=="F"),colour="#f9bd3b",size=1,group=1, mapping= aes(x=outcome, y=sex_ratio, colour="#f9bd3b")) 
p <- p +  scale_y_continuous("Proportion", sec.axis = sec_axis(~ . * 1, name = "Sex Ratio(M/F)"))
p <- p + theme_minimal()
p <- p + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p <- p + xlim(-2,10)
p

ggplot(data=outcomeandsex,
       aes(x=outcome, y=count, fill=sex))+
  geom_col(position="fill")

  
#  ylim(0,0.75)

#### test the effect of sex ratio/population size on infertility rate. MCMCGLMM with binary response ####

library(MCMCglmm)

# 1. make priors

priors <- list(R = list(V = 10, fix = 1), 
               G = list(G1 = list(V = 1, nu = 1, alpha.mu = 0, alpha.V = 1000)))
               
priors3<-list(G = list(G1 = list(V = diag(2), nu = 0.002)),
     R = list(V = 0.5, nu = 0.002, fix = FALSE))
## 2. make model

# exclude NAs from data, make new dataframe with only variables of interest

model.eggs<-data.frame(eggs$dam, eggs$outcome,eggs$fertilised, eggs$sex.ratio, eggs$population.size, eggs$hatched)
#rename columns
names(model.eggs)<-c("dam", "outcome", "fertilised", "sex.ratio", "population.size", "hatched")
# remove NA values
model.eggs<-na.omit(model.eggs)
model.eggs$outcome<-as.factor(model.eggs$outcome)
# run model
model1 <- MCMCglmm(fixed = fertilised ~ population.size, random=~dam, data = model.eggs,
                         family = "categorical",
                         prior = priors, verbose=FALSE)

# use these plots to check that variation around the mean is constant
autocorr(model1$Sol)
# these values show autocorrelation of the mean of successive samples from the chain
# what you want is LOW correlation - they should be independent. 
# these values are a bit high
plot(model1$Sol)
# plot also shows slight trends

# use these plots to check for autocorrelation in variance from successive samples in the chain (trends in left hand plots)
plot(model1$VCV)
# a bit of a pattern.. 
autocorr(model1$VCV)
# these values show autocorrelation between variances from successive samples in the chain, again low correlation is good
# here we have slightly high values which suggests the model needs to be run for more iterations, lets try it


model1 <- MCMCglmm(fixed = fertilised ~ population.size, random=~dam, data = model.eggs,
                   family = "categorical",
                   prior = priors, verbose=FALSE,
                   nitt= 1000000, thin=1000, burnin=10000)



# try diagnostics again

autocorr(model1$Sol)
#good
autocorr(model1$VCV)
# good

summary(model1)
# population size has a significant effect on infertility likelihood 
# (pMCMC = <0.001, lower 95 CI = 0.03911, upper 95 CI 0.07131)

# what about sex ratio


model2 <- MCMCglmm(fixed = fertilised ~ sex.ratio, random=~dam, data = model.eggs,
                   family = "categorical",
                   prior = priors, verbose=FALSE,
                   nitt= 1000000, thin=1000, burnin=10000)


autocorr(model2$Sol)
#good
autocorr(model2$VCV)
# good 
plot(model2$Sol)

summary(model2)

### what about the different outcomes of eggs?

model.eggs$outcome<-as.factor(model.eggs$outcome)
levels(model.eggs$outcome)

p.var<-var(eggs$outcome, na.rm = TRUE)

priors3 <- list(R=list(V=diag(1), nu=1),G=list(G1=list(V=diag(1),
                                                       nu=1))) 
model3 <- MCMCglmm(fixed = outcome ~ population.size, random=~dam, data = model.eggs,
                   family = "categorical", prior = priors3, rcov = ~us(trait):units,verbose=FALSE, 
                   nitt= 1000000, thin=1000)

model4 <- MCMCglmm(fixed = hatched ~ sex.ratio, random=~dam, data = model.eggs,
                   family = "categorical",
                   prior = priors, verbose=FALSE, nitt= 1000000, thin=1000)

autocorr(model4$Sol)
#good
autocorr(model4$VCV)
# good 
plot(model4$Sol)

summary(model4)

library(lme4)
model4<-glmer(outcome ~ population.size + (1|dam), data=model.eggs, family="binomial")
qqnorm(resid(model4))
plot(model4$fitt)
summary(model4)

autocorr(model3$Sol)
#good
autocorr(model2$VCV)
# good 
plot(model2$Sol)

#plot sex ratio by stage of death
eggs %>%
  filter!(is.na(eggs[,c(4,12)])) %>%
ggplot(data=subset(eggs, aes(x=outcome, fill=sex))+
  geom_bar())

pop.size.$sex.ratio<-sex.ratio.$sex.ratio

names(pop.size.)<-c("year","pop.size","number.females","number.males","sex.ratio")

library(reshape2)

pop.size.2<-data.frame(pop.size.$year,pop.size.$pop.size,pop.size.$sex.ratio)
pop.size.2$pop.size..pop.size<-(pop.size.2$pop.size..pop.size)/100

pop.size.2.melted<-melt(pop.size.2, id.vars="pop.size..year")

names(pop.size.2.melted)<-c("year","variable","value")
pop.size.melted[pop.size.melted$variable == "pop.size"|"sex.ratio"]

pop.size.melted<-melt(pop.size., id.vars = "year")
pop.size.2.melted$year<-as.factor(pop.size.2.melted$year)

ggplot(data=data, aes(x="population size", y=sex.ratio))+
  geom_point()+
  geom_smooth(method="lm")+
  theme_minimal()

ggplot(data=pop.size.2.melted,aes(x=year,y=value, colour=variable))+
  geom_point(size=2)+
  xlab("Year")+
  ylab("Value")+
  scale_colour_manual(values=c("#56B4E9","#E69F00"), name="",labels=c("Population Size(/100)", "Sex Ratio"))+
  theme_minimal()

pop.size.3<-data.frame(pop.size.$year,pop.size.$number.females,pop.size.$number.males)
names(pop.size.3)<-c("year","number.females","number.males")
pop.size.3.melted<-melt(pop.size.3)

ggplot(data=pop.size.3.melted,aes(x=year, y=value, fill=variable))+
  geom_col()+
  scale_fill_manual(values=c("#56B4E9","#E69F00"), labels=c("Females", "Males"), name="")+
  xlab("Year")+
  ylab("Population Size")+
  scale_y_continuous(breaks=c(0,50,100,150,200,250))+
  theme_minimal()

fulldata <- read_csv("~/Documents/PhD/Master Database 4.csv", col_types = cols(hatch.date = col_date(format = "%d/%m/%Y"),laying.date = col_date(format = "%d/%m/%Y")))

firstclutches<-subset(data, clutch=="1")

library(ggplot2)
Master_Database_3$rel.laying.date<-as.integer(Master_Database_3$rel.laying.date)
data$year<-as.factor(data$year)

firstclutches$year<-as.factor(firstclutches$year)
data$rel.laying.date<-as.integer(data$rel.laying.date)
ggplot(data=data, aes(x=number.females,y=hatching.success))+
  xlab("Number of Females")+
  ylab("Hatching Success")+
  geom_point()+
  theme_minimal()+
  geom_smooth(method=glm)

ggplot(data=Master_Database_3, aes(x=hatching.success))+
  geom_histogram(bins=20)+
  xlab("Hatching Success (proportion)")+
  theme_minimal()

chisq.test(x=data$year, y=data$breeding.synchrony)

names(data)[41]<-"population.size"
ggplot(data=fulldata, aes())

model1<-glm(hatching.success~female.age, family=binomial, data=Master_Database_3)
model2<-glm(hatching.success~sex.ratio, family="binomial", data=data)
model2.1<-(glm(infertility.rate~sex.ratio, family="binomial", data=data))
model2.3<-glm(infertility.rate~population.size, family=binomial, data=data)
anova(model2.3, test="Chisq")

data$lay.max<-as.numeric(data$lay.max)
data$lay.min<-as.numeric(data$lay.min)
data$lay.rain<-as.numeric(data$lay.rain)
data$fledge.sex.ratio<-as.numeric(data$fledge.sex.ratio)
data$year<-as.factor(data$year)
ggplot(data=data, aes(x=year,y=fledge.sex.ratio))+
  xlab("Year")+
  ylab("Sex Ratio")+
  geom_boxplot(aes(colour="E69F00"))+
  geom_boxplot(aes(x=year,y=sex.ratio,colour="#56B4E9"))+
  scale_colour_discrete(name="",labels=c("February Survey", "Fledging"))+
  theme_minimal()+
 
  geom_smooth(method=glm)

model3<-glm(hatching.success ~ lay.max + lay.rain, data=data, family="binomial")

# plot of hatching failure divided by infertility and embryo mortality 
# make new column of "embryo mortality in data
data$embryo.morality<-data$unhatched-data$infertile.eggs
data$embryo.mortality.rate<-data$embryo.morality/data$eggs

#filter data so those with embryo mortality rate of less than 0 (?) are deleted
library(dplyr)
data<-filter(data, embryo.mortality.rate>=0)
  
# plot embryo mortality rate vs hatching failure rate

ggplot(data=data, aes(x=year,y=embryo.mortality.rate))+
  xlab("Year")+
  ylab("Embryo Mortality")+
  #geom_point(colour="#E69F00")+
  #geom_point(aes(x=hatching.success,y=infertility.rate),colour="#56B4E9")
  geom_count(mapping = NULL,
data = NULL,
stat = "sum",
position = "identity",
na.rm = FALSE,
show.legend = NA,
inherit.aes = TRUE, colour="#E69F00", alpha=0.7
)+
  geom_count(
data = NULL,
stat = "sum",
position = "identity",
na.rm = FALSE,
show.legend = NA,
aes(x=year, y=infertility.rate), colour="#56B4E9"
, alpha=0.7
)+
  scale_size(range=c(1,10), breaks=c(10,50,100,200))+
  scale_colour_manual(values=c("#E69F00","#56B4E9"),labels=c("Embryo Mortality", "Infertility Rate"))+
  theme_minimal()
 # geom_smooth(aes(x=hatching.success,y=embryo.mortality.rate))+
#  geom_smooth(aes(x=hatching.success,y=infertility.rate))

by.year<-data.frame(data$year,data$embryo.mortality.rate,data$infertility.rate, data$hatching.success)
by.year<-melt(by.year, id.var="data.year")

ggplot(data=by.year, aes(x=data.year,y=value))+
  xlab("Year")+
  ylab("Embryo Mortality")+
  geom_bar(aes(fill=variable), position="stack", stat="identity")
 # plot infertility vs hatching failure with size of points depending on number of points
 # why isn't colour working?
fulldata$rel.laying.date<-as.integer(fulldata$rel.laying.date)

fulldata<-fulldata[fulldata$rel.laying.date<300,]
fulldata<-fulldata[fulldata$hatching.success<=1,]

date.model<-glm(hatching.success~rel.laying.date+(rel.laying.date^3), data=fulldata, family="binomial")

ggplot(data=data, aes(y=infertility.rate,x=rel.laying.date))+
  ylab("Infertility Rate")+
  xlab("Lay Date")+
  geom_count(aes(y=infertility.rate, x=rel.laying.date),
             data = NULL,
             stat = "sum",
             position = "identity",
             na.rm = FALSE,
             show.legend = TRUE,
             inherit.aes = FALSE,
             colour="#56B4E9",
             alpha=0.8)+
  scale_size(range=c(1,10), breaks=c(10,50,100,200))+
  labs(size="n (clutch)")+
  geom_smooth()+
  theme_minimal()
  #scale_color_manual(values = c("blue" = "#56B4E9"))+
 
  #scale_colour_manual(values = c("blue" = "#56B4E9", "orange" = "#E69F00"), 
                      #labels = c("Infertility", "Embryo Mortality"), 
                     # name="Failure Mechanism")+

ggplot(data=data, aes(y=hatching.success,x=infertility.rate))+
   ylab("Hatching Success Rate")+
  xlab("Rate of Failure Mechanism")+
  geom_count(aes(y=hatching.success, x=infertility.rate,colour="blue" ),
                  data = NULL,
                 stat = "sum",
                 position = "identity",
                 na.rm = FALSE,
                 show.legend = TRUE,
                  inherit.aes = FALSE,
             alpha=0.5)+
  geom_count(aes(y=hatching.success, x=embryo.mortality.rate,colour="orange" ),
             data = NULL,
             stat = "sum",
             position = "identity",
             na.rm = FALSE,
             show.legend = TRUE,
             inherit.aes = FALSE,
             alpha=0.5)+
  scale_colour_manual(values = c("blue" = "#56B4E9", "orange" = "yellow2"), 
                      labels = c("Infertility", "Embryo Mortality"), 
                      name="Failure Mechanism")+
  scale_size(range=c(1,10))+
  theme_minimal()
  geom_smooth(rang="lm")

#plot of infertility and embryo mortality through years
data$year<-as.factor(data$year)

ggplot(data=data, aes(y=infertility.rate,x=year))+
  ylab("Hatching Failure Rate")+
  xlab("Rate of Failure Mechanism")+
  geom_bar(aes(y=embryo.mortality.rate, x=year,fill="blue"),
             data = NULL,
             stat = "count",
             position = "stack",
             na.rm = FALSE,
             show.legend = TRUE,
             inherit.aes = FALSE, alpha=0.8)+
  geom_bar(aes(y=infertility.rate, x=year,fill="orange"),
             data = NULL,
             stat = "count",
             position = "stack",
             na.rm = FALSE,
             show.legend = TRUE,
             inherit.aes = FALSE, alpha=0.8)+
  scale_fill_manual(values = c("blue" = "#56B4E9", "orange" = "#E69F00"), 
                      labels = c("Infertility", "Embryo Mortality"), 
                      name="Failure Mechanism")+
  theme_minimal()+
  geom_smooth(method="lm")

ggplot(data=data, aes(y=infertility.rate,x=st.clutch))+
  ylab("Hatching Failure Rate")+
  xlab("Clutch")+
  geom_boxplot(aes(y=embryo.mortality.rate, x=year,fill="blue"), position = "dodge")+
  #geom_boxplot(aes(y=infertility.rate, x=year,fill="orange", position = "dodge"))+
 # scale_fill_manual(values = c("blue" = "#56B4E9", "orange" = "#E69F00"), 
                    labels = c("Infertility", "Embryo Mortality"), 
                    name="Failure Mechanism")+
  theme_minimal()
  geom_smooth(method="lm")
ggplot(data=data, aes(y=infertility.rate,x=st.clutch))+
  ylab("Hatching Failure Rate")+
  xlab("Clutch")+
  geom_boxplot()+
  theme_minimal()
  geom_smooth(method="lm")
  
library(plotly)
fig <- plot_ly(data = data, x = ~year, 
               y = ~infertile.eggs, type = 'bar', 
               name = 'Infertile', 
               marker=list(color ='rgb(86, 180, 233)'))
fig <- fig %>% add_trace(y = ~embryo.morality, name = 'Embryo Mortality', marker = list(color = 'rgb(230, 159, 0)'))
fig <- fig %>% add_trace(y = ~unhatched, name = 'Total Unhatched Eggs', marker = list(color='rgb(156, 227, 93)'))
fig <- fig %>% layout(yaxis = list(title = 'Count'), barmode = 'group', xaxis = list(title = 'Year'))
fig

mean(filter(data, year==2015$infertility.rate)

data %>%
  group_by(year) %>%
  summarise(mean(infertility.rate, na.rm=TRUE))
     
     
group_by(data, year) %>%
  summary(data$infertility.rate)
ggplot(data=data, aes(x=year, y=infertility.rate))+
  geom_boxplot(colour="#56B4E9")+
  xlab("Year")+
  ylab("Infertility Rate (of all eggs)")+
  theme_minimal()
# population size through time, year included in infertility rate / sex ratio / population size analysis.

# create table of pop size through years
pop.size.<- data %>%
  group_by(year) %>%
  summarise(max(population.size, na.rm=TRUE),max(number.females),max(number.males))

names(pop.size.)<-c("year","pop.size","number.females","number.males")

#stacked bar chart of pop size divided into males and females through years
fig <- plot_ly(data = pop.size., x = ~year, 
               y = ~number.females, type = 'bar', 
               name = 'Females'))
               #marker=list(color ='rgb(156, 227, 93)'))
fig <- fig %>% add_trace(y = ~number.males, name = 'Males'))
                         #marker = list(color = 'rgb(230, 159, 0)'))
fig <- fig %>% layout(yaxis = list(title = 'Population Size'), barmode = 'stack', xaxis = list(title = 'Year'))
fig

#sex ratio and pop size through years 

sex.ratio.<-data %>%
  group_by(year) %>%
  summarise(mean(sex.ratio))
names(sex.ratio.)<-c("year", "sex.ratio")

pop.size.$sex.ratio<-sex.ratio.$sex.ratio

names(pop.size.)<-c("year","pop.size","number.females","number.males","sex.ratio")

library(reshape2)

pop.size.2<-data.frame(pop.size.$year,pop.size.$pop.size,pop.size.$sex.ratio)
pop.size.2$pop.size..pop.size<-(pop.size.2$pop.size..pop.size)/100

pop.size.2.melted<-melt(pop.size.2, id.vars="pop.size..year")

names(pop.size.2.melted)<-c("year","variable","value")
pop.size.melted[pop.size.melted$variable == "pop.size"|"sex.ratio"]

pop.size.melted<-melt(pop.size., id.vars = "year")
pop.size.2.melted$year<-as.factor(pop.size.2.melted$year)

ggplot(data=data, aes(x="population size", y=sex.ratio))+
         geom_point()+
  geom_smooth(method="lm")+
  theme_minimal()

ggplot(data=pop.size.2.melted,aes(x=year,y=value, colour=variable))+
  geom_point(size=2)+
  xlab("Year")+
  ylab("Value")+
  scale_colour_manual(values=c("#56B4E9","#E69F00"), name="",labels=c("Population Size(/100)", "Sex Ratio"))+
  theme_minimal()
  
pop.size.3<-data.frame(pop.size.$year,pop.size.$number.females,pop.size.$number.males)
names(pop.size.3)<-c("year","number.females","number.males")
pop.size.3.melted<-melt(pop.size.3)

ggplot(data=pop.size.3.melted,aes(x=year, y=value, fill=variable))+
  geom_col()+
  scale_fill_manual(values=c("#56B4E9","#E69F00"), labels=c("Females", "Males"), name="")+
  xlab("Year")+
  ylab("Population Size")+
  scale_y_continuous(breaks=c(0,50,100,150,200,250))+
  theme_minimal()

data$embryo.mortality.rate<-data$embryo.mortality.eggs/data$eggs

ggplot(data=data, aes(x=infertility.rate,y=embryo.mortality.rate))+
  xlab("Infertility Rate")+
  ylab("Embryo Mortality Rate")+
  #geom_point(aes(y=hatching.success),colour="skyblue")
  geom_count(aes(x=infertility.rate,y=embryo.mortality.rate),
             data = NULL,
             stat = "sum",
             position = "identity",
             na.rm = FALSE,
             show.legend = TRUE,
             inherit.aes = FALSE,
             colour="#E69F00",
             alpha=0.8)+
  scale_size(range=c(1,10),breaks=c(1,5,10,50), name="n (clutch)")+
  geom_smooth()+ theme_minimal()
 # scale_size(range=c(1,10))
  
  ggplot(data=data, aes(x=population.size,y=infertility.rate))+
    xlab("Population Size")+
    ylab("Infertility Rate")+
    geom_count(aes(x=population.size,y=infertility.rate),
               data = NULL,
               stat = "sum",
               position = "identity",
               na.rm = FALSE,
               show.legend = TRUE,
               inherit.aes = FALSE,
               colour="#56B4E9",
               alpha=0.8)+
    scale_size(range=c(1,10),breaks=c(1,5,10,50))+
    theme_minimal()
  # geom_smooth(method="lm") theme_minimal()
  #scale_size(range=c(1,10))


data$embryo.mortality.rate<-((1-data$hatching.success)-data$infertility.rate)
data$embryo.mortality.rate<-as.integer(data$embryo.mortality.rate)
em.model1<-glm(data=data,as.integer(((1-data$hatching.success)-data$infertility.rate))~population.size, family="binomial")
summary(em.model1)
cor.test(data$embryo.mortality.rate,data$population.size)
# plot embryo mortality against sex ratio / population size 

# plot infertility rate agains population size with size of points depending on number of data

# quadratic function/polynomial for female age and hatcing success

female.age.data<-female.age.data[female.age.data$female.age > 50, ]
female.age.data<-female.age.data[female.age.data$hatching.success <= 1, ]

model2<-lm(cbind(hatched,unhatched)~female.age*female.code, data=female.age.data)
model2.1<-lm(cbind(hatched,unhatched)~female.age*female.code + (female.age^2), data=female.age.data, family="binomial")
model2.2<-lm(cbind(hatched,unhatched)~female.age*female.code + (female.age^3), data=female.age.data, family="binomial")

fulldata$unhatched<-as.integer(fulldata$unhatched)
fulldata$female.age<-as.integer(fulldata$female.age)

female.age.data<-data.frame(fulldata$female.code,fulldata$female.age,fulldata$eggs,fulldata$hatching.success, fulldata$hatched, fulldata$unhatched)

female.age.data<-na.omit(female.age.data)

names(female.age.data)<-c("female.code", "female.age", "eggs", "hatching.success", "hatched", "unhatched")

female.age.data$unhatched<-as.integer(female.age.data$unhatched)

female.age.data$female.age<-as.integer(female.age.data$female.age)

fulldata$unhatched<-fulldata$eggs-fulldata$hatched
model1.2<-glm(cbind(hatched,unhatched)~female.age*female.code, data=female.age.data , family="quasibinomial")
model1.3<-glm(hatching.success~female.age, data=fulldata, family="binomial")z

summary(model1.3)
anova(model1.30, test="Chisq")
model1.3<-glm(cbind(hatched,unhatched)~ poly(female.age,3), data=female.age.data, family="quasibinomial")
model1.30<-glm(cbind(hatched,unhatched)~ female.code*poly(female.age,3), data=female.age.data, family="quasibinomial")
model1.4<-glm(cbind(hatched,unhatched)~female.code, data=female.age.data, family="quasibinomial")
model1.5<-glm(cbind(hatched,unhatched)~female.age*female.code, data=female.age.data, family="binomial")
model1.poly<-glm(cbind(hatched,unhatched)~female.age*female.code+(female.age^2), data=female.age.data , family="binomial")
model2.poly<-model1.poly<-glm(cbind(hatched,unhatched)~female.age+female.code+(female.age^2), data=female.age.data , family="binomial")

anova(model1.poly, test="Chisq")

anova(model1.5, test="Chisq")
summary(model1.poly)



# plot fitted line

poly.predict<-data.frame(female.age=seq(female.age.data$female.age),
                         max(female.age.data$female.age), length=1000)

poly.predict1<-predict(model1.poly, newdata=poly.predict, type="link", se.fit=TRUE)

head(poly.predict1)

pp<-data.frame(poly.predict, poly.predict1)
library(dplyr)
pp<-mutate(pp, fitness=exp(fit))
pp<-mutate(pp, ucl=exp(fit +1.96*se.fit))
pp<-mutate(pp,lcl=exp(fit - 1.96*se.fit))



ggplot(data=fulldata,aes(x=hatching.success))+
  geom_count()


agevalues<-seq(48,3642,6)
fulldata$predict.female.age<-predict(model1.1, newdata=female.age= )

fulldata$female.age<-

library(ggplot2)
ggplot(data=female.age.data, aes(x=female.age, y=hatched))+
  geom_count(aes(x=female.age, y=hatched),
             data = NULL,
             stat = "sum",
             position = "identity",
             na.rm = FALSE,
             show.legend = TRUE,
             inherit.aes = FALSE,
             colour="#56B4E9",
             alpha=0.5)+
  geom_smooth()+
  #stat_smooth(aes(y=hatching.success), method="lm", formula=y ~ x + I(x^2) + I(x^3), size=1)+
  #geom_line(data=pp, aes(x=female.age,y=fitness))+
 # geom_smooth(method="lm", formula=y ~ x + I(X^2) + I(X^3) )+
  xlab("Female Age (days)")+
  ylab("Hatched Eggs")+
  theme_minimal()+
  scale_size(range=c(1,10))

ggplot(data=data, aes(x=female.age, y=embryo.mortality.rate))+
  geom_count(aes(x=female.age, y=embryo.mortality.rate),
             data = NULL,
             stat = "sum",
             position = "identity",
             na.rm = FALSE,
             show.legend = TRUE,
             inherit.aes = FALSE,
             colour="#56B4E9",
             alpha=0.5)+
  geom_smooth()+
  #stat_smooth(aes(y=hatching.success), method="lm", formula=y ~ x + I(x^2) + I(x^3), size=1)+
  #geom_line(data=pp, aes(x=female.age,y=fitness))+
 # geom_smooth(method="lm", formula=y ~ x + I(X^2) + I(X^3) )+
  xlab("Female Age (days)")+
  ylab("Infertility Rate")+
  theme_minimal()+
  scale_size(range=c(1,10))

ggplot(data=female.age.data, aes(x=female.age, y=hatching.success))+
  geom_count(aes(x=female.age, y=hatching.success),
             data = NULL,
             stat = "sum",
             position = "identity",
             na.rm = FALSE,
             show.legend = TRUE,
             inherit.aes = FALSE,
             colour="#56B4E9",
             alpha=0.5)+
  #geom_smooth()+
  #stat_smooth(aes(y=hatching.success), method="lm", size=1)+
  #geom_line(data=pp, aes(x=female.age,y=fitness))+
  #geom_smooth(method="lm", formula=y~x + I(x^3) )+
  xlab("Female Age (days)")+
  ylab("Hatching Success (proportion)")+
  theme_minimal()+
  scale_size(range=c(1,10))

# female REPRODUCTIVE AGE plot

fulldata$female.reprod.age<-as.integer(fulldata$female.reprod.age)

female.reprod.age.data<-data.frame(fulldata$female.code,fulldata$female.reprod.age,fulldata$eggs,fulldata$hatching.success, fulldata$hatched, fulldata$unhatched)

female.reprod.age.data<-na.omit(female.reprod.age.data)

names(female.reprod.age.data)<-c("female.code", "female.age", "eggs", "hatching.success", "hatched", "unhatched")

female.reprod.age.data$unhatched<-as.integer(female.reprod.age.data$unhatched)

ggplot(data=female.reprod.age.data, aes(x=female.age, y=hatching.success))+
  geom_count(aes(x=female.age, y=hatching.success),
             data = NULL,
             stat = "sum",
             position = "identity",
             na.rm = FALSE,
             show.legend = TRUE,
             inherit.aes = FALSE,
             colour="#56B4E9",
             alpha=0.5)+
  #geom_smooth()+
  #stat_smooth(aes(y=hatching.success), method="lm", size=1)+
  #geom_line(data=pp, aes(x=female.age,y=fitness))+
  geom_smooth(method="lm")+ 
              #formula=y~x + I(x^3) )+
  xlab("Days Since First Reproduction")+
  ylab("Hatching Success (proportion)")+
  theme_minimal()+
  scale_size(range=c(1,10))

model1.5.reprod<-glm(cbind(hatched,unhatched)~female.age*female.code, data=female.reprod.age.data, family="quasibinomial")

model1.30<-glm(cbind(hatched,unhatched)~ female.code*poly(female.age,3), data=female.reprod.age.data, family="quasibinomial")

model1.poly.reprod<-glm(cbind(hatched,unhatched)~female.age*female.code+(female.age^2), data=female.reprod.age.data , family="binomial")

ggplot(data=fulldata, aes(x=eggs.laid.before.current.clutch, y=hatching.success))+
geom_count(aes(x=eggs.laid.before.current.clutch, y=hatching.success),
             data = NULL,
             stat = "sum",
             position = "identity",
             na.rm = FALSE,
             show.legend = TRUE,
             inherit.aes = FALSE,
             colour="#56B4E9",
             alpha=0.5)+
  #geom_smooth()+
  #stat_smooth(aes(y=hatching.success), method="lm", size=1)+
  #geom_line(data=pp, aes(x=female.age,y=fitness))+
  #geom_smooth(method="lm")+ 
  #formula=y~x + I(x^3) )+
  xlab("Prior Reproductive Effort (Eggs Laid)")+
  ylab("Hatching Success (proportion)")+
  theme_minimal()+
  scale_size(range=c(1,10))

ggplot(data=fulldata, aes(x=fledged.before.current.clutch, y=hatching.success))+
  geom_count(aes(x=fledged.before.current.clutch, y=hatching.success),
             data = NULL,
             stat = "sum",
             position = "identity",
             na.rm = FALSE,
             show.legend = TRUE,
             inherit.aes = FALSE,
             colour="#56B4E9",
             alpha=0.5)+
  geom_smooth()+
  #stat_smooth(aes(y=hatching.success), method="lm", size=1)+
  #geom_line(data=pp, aes(x=female.age,y=fitness))+
  #geom_smooth(method="lm")+ 
  #formula=y~x + I(x^3) )+
  xlab("Prior Reproductive Effort (Fledged Chicks)")+
  ylab("Hatching Success (proportion)")+
  theme_minimal()+
  scale_size(range=c(1,10))+
  facet_grid(.~female.age.year)

# classify female age

fulldata$female.age.year[fulldata$female.age<365]<-1
fulldata$female.age.year[fulldata$female.age>=365 & fulldata$female.age<730]<-2
fulldata$female.age.year[fulldata$female.age>=730 & fulldata$female.age<(365*3)]<-3
fulldata$female.age.year[fulldata$female.age>=(365*3) & fulldata$female.age<(365*4)]<-4
fulldata$female.age.year[fulldata$female.age>=(365*4) & fulldata$female.age<(365*5)]<-5
fulldata$female.age.year[fulldata$female.age>=(365*5) & fulldata$female.age<(365*6)]<-6
fulldata$female.age.year[fulldata$female.age>=(365*6) & fulldata$female.age<(365*7)]<-7
fulldata$female.age.year[fulldata$female.age>=(365*7) & fulldata$female.age<(365*8)]<-8
fulldata$female.age.year[fulldata$female.age>=(365*8) & fulldata$female.age<(365*9)]<-9
fulldata$female.age.year[fulldata$female.age>=(365*9) & fulldata$female.age<=(3661)]<-10

fulldata$female.age.year<-as.factor(fulldata$female.age.year)

ggplot(data=fulldata, aes(x=female.age.year, y=hatching.success))+
  geom_boxplot()

chisq.test(fulldata$female.age.year, fulldata$hatching.success)


# enviro data 
data$lay.max<-as.numeric(data$lay.max)
data$lay.min<-as.numeric(data$lay.min)
data$lay.rain<-as.numeric(data$lay.rain)

ggplot(data, aes(x=lay.min, y=hatching.success))+
  geom_count()+
  geom_smooth()
data$unhatched<-data$eggs-data$hatched
data$fertile.eggs<-data$eggs-data$infertile.eggs

rain.model<-glm(cbind(hatched,unhatched)~lay.rain+female.age+female, data=data, family="binomial")


  
# embryo mortality and infertility rate

data$year<-as.factor(data$year)

infert.model<-glm(infertility.rate~embryo.mortality.rate, data=data, family="binomial")

data<-data[data$hatching.success <= 1,]
 
chisq.test(data$hatching.success, data$year)

cor.test(data$infertile.eggs,data$embryo.mortality.eggs)

anova(infert.model, test="Chisq")


## clutch order 

ggplot(data=fulldata, aes(x=st.clutch, y=hatching.success))+
  geom_boxplot()+
  xlab("Clutch")+
  ylab("Hatching Success")+
  theme_minimal()

chisq.test(data$hatching.success,data$st.clutch)

clutch.model<-glm(hatching.success~st.clutch+rel.laying.date, data=fulldata, family="binomial")
















p   blot(female.age.data$female.age,female.age.data$hatching.success)

predict1<-seq(min(female.age.data$female.age),max(female.age.data$hatching.success), 1)

predict2<-predict(model1.poly, list(female.age=predict1, (female.age^2)=(predict1^2)))
# data on female condition?


# total clutch failures 
total.clutch.failures1<-fulldata[fulldata$hatching.success == 0,]
summary.total.failures<-summary(total.clutch.failures$st.clutch)

fulldata.1<-fulldata[fulldata$hatching.success > 0, ]
summary.clutches.full<-summary(fulldata.1$st.clutch)

clutch.model1<-lm(value~Var2*Var1, data=clutches1)

clutches<-rbind(summary.total.failures,summary.clutches.full)

clutches1<-melt(clutches)

ggplot(data=clutches1, aes(x=Var2, y=value, fill=Var1))+
  geom_col(position="fill")+
  xlab("Clutch")+
  ylab("Proportion")+
  scale_fill_discrete(labels=c("Total Failures","Other"), name="")+
  theme_minimal(
  )
  
ggplot(data=total.clutch.failures1, aes(x=female.age))+
  geom_bar()

write.csv(total.clutch.failures, file="total clutch faliures.csv")
 
  
count(fulldata$st.clutch == 1)

wilcox.test(filter(beforeandnow,cause=="truly infertile")$count,
            filter(beforeandnow,cause=="previously assumed infertile")$count, 
            paired=TRUE, alternative="less", conf.int = TRUE)



epp<-data.frame(eggs$outcome2,eggs$paternity)
names(epp)<-c("outcome2","paternity")
epp<-na.omit(epp)

epp<-epp %>%
  group_by(outcome2,paternity) %>%
  summarise(n=n())

### EPP plot (section of 3 panel plot) ####
plot1<-ggplot(data=epp, aes(x=outcome2,y=n,fill=paternity))+
  geom_col(position="fill")+
  theme_minimal()+
  theme(legend.title = element_blank())+
  xlab("Outcome")+
  ylab("Proportion")+
  theme(legend.title=element_blank(),
        axis.text.x = element_text(size = 12))+
 scale_x_discrete(labels= c("Early EM", "Mid EM", "Late EM", "Hatched"))+
 geom_hline(yintercept=0.5, linetype="dashed", color = "#f0f921", size=1)+
#theme(axis.text.x = element_text(angle = 325,vjust = 0., hjust=0.4))+
 scale_fill_manual(values=c("#6a00a8", "#fca636"),labels=c("EPP","WPP"))
plot1


### inbreeding of early embryos 

#### INBREEDING ####
### calculate inbreeding coefficients ###

library(readr)
ped <- read_csv("Ped for R 3.csv", 
                col_types = cols(dam = col_character(), 
                                 label = col_character(), sire = col_character()))
View(ped)

library(pedigreemm)
library(dplyr)
library(pedigree)

ped.1<-pedigreemm::pedigree(sire=ped$sire, dam=ped$dam, label=ped$label) 

ped.2<-pedigreemm::inbreeding(ped.1)

f.values<-data.frame(ped.2)

ped$f.values<-f.values$ped.2

## list of individuals who have minimum of two generates (six close relatives i.e dam, sire and materanal and paternal grandparents in ped - this is needed for accurate f values)
ped_indivs <- read_csv("list of pedigree individuals for inbreeding.csv")

ped_indivs<-left_join(ped_indivs,ped[,c(1,4)])


# put female inbreeding coeffs in to full data

inbreeding_values_2<-data.frame(ped_indivs$label, ped_indivs$f.values)

colnames(inbreeding_values_2)<-c("sample", "f.value.")

inbreeding_values_2$sample<-as.character(inbreeding_values_2$sample)

eggs<-left_join(eggs, inbreeding_values_2)

inbreed(ped1)

#take out years before 2013 because i'm not sure of reliability of estimates, genotyping started not long before that

ggplot(data=eggs, aes(y=f.value.))+
  + geom_histogram()+
  + facet_wrap(~year)

eggs<-within(eggs, f.value.[year == '2010' | year == '2011'] <- NA)

summary(eggs$f.value.)

#hasn't really changed much... 

#plot inbreeding of different failure stages

library(ggplot2)

plotdata<-data.frame(eggs$sample,eggs$outcome2, eggs$outcome3 ,eggs$f.value.,eggs$sex,eggs$year)

names(plotdata)<-c("sample", "outcome2", "outcome3","f.value.", "Sex", "year")

plotdata$outcome2<-as.factor(plotdata$outcome2)

levels(plotdata$outcome2)


plotdata<-na.omit(plotdata)

library(ggplot2)

plot2<-ggplot(data=inb.model.data, aes(x=outcome2,y=f.value., colour=sex))+
  geom_boxplot()+
 ylim(0,0.1)+
  theme_minimal()+
 scale_colour_manual(values=c("#790da4", "#e16462"),labels=c("Female","Male"))+
  xlab("Outcome")+
  ylab("Inbreeding Coefficient (F)")+
scale_x_discrete(labels= c("Early EM", "Mid EM", "Late EM", "Hatched"))+
theme(legend.title=element_blank())

plot2
library(dplyr)
plotdata1<-plotdata %>%
  group_by(outcome2,Sex)%>%
  summarise(mean_inb=mean(f.value.),n=n(),se=sd(f.value.)/sqrt(n()))

plot2a<-ggplot(data=plotdata1, aes(x=outcome2,y=mean_inb, colour=Sex))+
  geom_point(position=position_dodge(width=0.75),size=2)+
  geom_errorbar(aes(ymin=mean_inb-se,ymax=mean_inb+se),position=position_dodge(width=0.75),width=0.5,size=0.5)+
  theme_minimal()+
  scale_x_discrete(labels= c("Early EM", "Mid EM", "Late EM", "Hatched"))+
  scale_colour_manual(values=c("#0c0b84", "#b12a90"),labels=c("Female","Male"))+  xlab("Outcome")+
  theme(legend.title=element_blank())+
  theme(legend.title=element_blank(),
        axis.title.x = element_blank(),
        axis.ticks.x = element_blank(),
        axis.text.x = element_blank())+
  ylab("Inbreeding Coefficient (F)")+ylim(0,0.04)

plot2a

plotdata2<-eggs %>%
  group_by(paternity)%>%
  summarise(mean_inb=mean(f.value., na.rm=TRUE),n=n(),se=sd(f.value., na.rm=TRUE)/sqrt(n()))

plotdata2<-na.omit(plotdata2)

plot3<-ggplot(data=plotdata2, aes(x=paternity,y=mean_inb, colour=paternity))+
  geom_point(position=position_dodge(width=0.75),size=2)+
  geom_errorbar(aes(ymin=mean_inb-se,ymax=mean_inb+se),position=position_dodge(width=0.75),width=0.3,size=0.5)+
  theme_minimal()+
 #scale_x_discrete(labels= c("Early EM", "Mid EM", "Late EM", "Hatched"))+
  scale_colour_manual(values=c("#6a00a8", "#fca636"),labels=c("EPP","WPP"))+  xlab("Paternity")+
  theme(legend.title=element_blank())+
  ylab("Inbreeding Coefficient (F)")
 
plot3


plotdata3<-eggs %>%
  group_by(paternity,outcome2)%>%
  summarise(mean_inb=mean(f.value., na.rm=TRUE),n=n(),se=sd(f.value., na.rm=TRUE)/sqrt(n()))

plotdata3<-na.omit(plotdata3)

plot3a<-ggplot(data=plotdata3, aes(x=outcome2,y=mean_inb, colour=paternity))+
  geom_point(position=position_dodge(width=0.75),size=2)+
  geom_errorbar(aes(ymin=mean_inb-se,ymax=mean_inb+se),position=position_dodge(width=0.75),width=0.5,size=0.5)+
  theme_minimal()+
  scale_x_discrete(labels= c("Early EM", "Mid EM", "Late EM", "Hatched"))+
  scale_colour_manual(values=c("#790da4", "#e16462"),labels=c("EPP","WPP"))+  xlab("Outcome")+
  theme(legend.title=element_blank(), axis.text.x = element_text(size = 12))+
  ylab("Inbreeding Coefficient (F)")+ylim(0,0.04)
plot3a

#sample size 

plotdata %>%
  group_by(outcome2) %>%
  summarise(count=n())

eggs %>%
  group_by(outcome2) %>%
  summarise(count=n())

library(cowplot)

plot_grid(p,plot2a,plot1,nrow=3, align="hv", labels="auto")

## summary of inbreeding values 

mean(eggs$f.value., na.rm=TRUE)
sd(eggs$f.value., na.rm=TRUE)
length(eggs$f.value.)

eggs%>%
  group_by(outcome3,sex)%>%
  summarise(n=n())

plotdata %>%
  group_by(outcome2)%>%
  summarise(mean_inb=mean(f.value.),n=n())


## hatching failure and infertility ####

hatching.failure.summary<-eggs%>%
  group_by(year) %>%
  summarise(hatched=sum(hatched, na.rm=TRUE)/n())

fertility.rates<-left_join(fertility.rates,hatching.failure.summary)

fertility.rates$hatching.failure.rates<-1-fertility.rates$hatched

fertility.rates$infertility<-1-fertility.rates$fertility.rate

hplot1<-ggplot(data=fertility.rates,aes(y=fertility.rate,x=hatched))+
  geom_point(colour="#790da4",
             alpha=0.5)+
  geom_smooth(method="lm", colour = "#e16462", alpha=0.2)+
  theme_minimal()+
  ylab("Annual Hatching Success")+
  xlab("Annual Fertility Rate")

cor.test(fertility.rates$infertility,fertility.rates$hatching.failure.rates)

hist(fertility.rates$infertility)
hist(fertility.rates$hatching.failure.rates)

yearlymodel<-glmmTMB(hatched ~ infertility, data=fertility.rates)

summary(yearlymodel)

hatching.failure.summary2<-eggs %>%
  group_by(year) %>%
  summarise(hatching.success=sum(hatched, na.rm=TRUE)/n(),not.fertilised=n()-sum(fertilised,na.rm=TRUE))

hatching.failure.summary2<-na.omit(hatching.failure.summary2)

hplot2<-ggplot(data=hatching.failure.summary2,aes(y=not.fertilised,x=hatching.success))+
  geom_count(aes(y=not.fertilised,x=hatching.success),
             data = NULL,
             stat = "sum",
             position = "identity",
             na.rm = FALSE,
             show.legend = FALSE,
             inherit.aes = FALSE,
             colour="#790da4",
             alpha=0.5)+
  geom_smooth(method="lm", colour = "#e16462", alpha=0.2)+
  theme_minimal()+
  xlab("Individual Annual Hatching Success")+
  ylab("Individual Annual Infertility Rate")

ggplot(data=fertility.rates,aes(y=embryo.death.rate,x=hatching.failure.rates))+
  geom_count(aes(y=embryo.death.rate,x=hatching.failure.rates),
             data = NULL,
             stat = "sum",
             position = "identity",
             na.rm = FALSE,
             show.legend = FALSE,
             inherit.aes = FALSE,
             colour="#790da4",
             alpha=0.5)+
  geom_smooth(method="lm", colour = "#e16462", alpha=0.2)+
  theme_minimal()+
  xlab("Individual Annual Hatching Success")+
  ylab("Individual Annual Infertility Rate")
 # ylim(0,1)

clutch.summary<-clutches%>%
  group_by(year,dam) %>%
  summarise(eggs=sum(eggs, na.rm=TRUE),hatched=sum(hatched.eggs, na.rm=TRUE),
            unfertilised=sum(unfertilised,na.rm=TRUE),fertilised=sum(fertilised.eggs,na.rm=TRUE))

clutch.summary$unhatched<-clutch.summary$eggs-clutch.summary$hatched

clutch.summary$embryo.failure<-clutch.summary$unhatched-clutch.summary$unfertilised

indiv_annual_data<-data.frame(eggs$year, eggs$dam, eggs$fertilised, eggs$hatched)
names(indiv_annual_data)<-c("year","dam","fertilised","hatched")
indiv_annual_data<-na.omit(indiv_annual_data)

### embryo mortality vs total hatching failure. 

fertility.rates$embryo.death.rate<-fertility.rates$hatching.failure.rates-fertility.rates$infertility

cor.test(fertility.rates$embryo.death.rate,fertility.rates$hatching.failure.rates)

hist(clutches$unhatched)
hist(clutches$hatched.eggs)
hist(clutches$unfertilised)

### final individual annual hatching success vs fertilisation rate model
indiv_annual_model<-glmmTMB(cbind(hatched,unhatched)~unfertilised + (1|dam) + (1|year), zi=~unfertilised, data=clutch.summary, family=binomial)
summary(indiv_annual_model)

indiv_annual_model<-glmmTMB(hatched~fertilised + (1|year)+(1|dam),  data=na.omit(eggs), family=nbinom1(link="log"))
summary(indiv_annual_model)
fixef(indiv_annual_model)
# what family? variance bigger then mean?

var(clutch.summary$hatched)
mean(clutch.summary$hatched)
hist(clutch.summary$hatched/clutch.summary$unhatched)
#variance is larger than the mean = negative binomial distribution for counts
# but we have zero inflation so include zero inflation component in model

DHARMa::plotQQunif(indiv_annual_model)
DHARMa::testOutliers(indiv_annual_model, type='bootstrap')
DHARMa::plotResiduals(indiv_annual_model)
DHARMa::testDispersion(indiv_annual_model)


hist(clutch.summary$embryo.failure)

indiv_annual_embryo_model<-glmmTMB(cbind(hatched,unhatched)~embryo.failure + (1|dam) + (1|year), zi=~embryo.failure, data=clutch.summary, family=binomial)
summary(indiv_annual_embryo_model)
DHARMa::plotQQunif(indiv_annual_embryo_model)
DHARMa::testOutliers(indiv_annual_embryo_model, type='bootstrap')
DHARMa::plotResiduals(indiv_annual_embryo_model)
DHARMa::testDispersion(indiv_annual_embryo_model)

indiv_annual_success_plot<-ggplot(data=clutch.summary,aes(x=embryo.failure,y=unfertilised))+
  geom_count(aes(x=embryo.failure,y=unfertilised),
             data = NULL,
             stat = "sum",
             position = "identity",
             na.rm = FALSE,
             show.legend = FALSE,
             inherit.aes = FALSE,
             colour="#790da4",
             alpha=0.5)+
  geom_smooth(method="lm", colour = "#e16462", alpha=0.2)+
  theme_minimal()+
  ylab("Individual Annual Hatching Success")+
  xlab("Individual Annual Infertility Rate")
# ylim(0,1)

indiv_annual_success_plot

plot_grid(p,plot2a,plot1,nrow=3, align="hv", labels="auto")

## what if all 33 eggs with no fertility status were infertile/early embryo mortality? ####

eggs2<-eggs

# replace NA values in outcome with infertile
library(tidyr)
eggs2<-replace_na(eggs2, list(outcome="infertile",outcome2="infertile",outcome3="infertile"))

eggs2 %>%
 group_by(outcome) %>%
  summarise(n=n())

# exclude eggs which were abandoned 

eggs2 <- eggs2  %>%
  filter(stage.of.death!="not incubated")

# recreate clutch data with new fake data with NAs all replace by infertile
clutches2 <- eggs2 %>% group_by(year,dam,clutch) %>%
  summarise(eggs=n(),hatched.eggs=sum(hatched), fertilised.eggs=sum(fertilised), s.ratio=mean(sex.ratio), pop.size=mean(population.size))

clutches2$unfertilised<-clutches2$eggs - clutches2$fertilised.eggs

clutches2$unhatched<-clutches2$eggs - clutches2$hatched.eggs

clutches2<-left_join(clutches2, eggs2[,c(1,23,24)])


clutch.summary2<-clutches2%>%
  group_by(year,dam) %>%
  summarise(eggs=sum(eggs, na.rm=TRUE),hatched=sum(hatched.eggs, na.rm=TRUE),
            unfertilised=sum(unfertilised,na.rm=TRUE),fertilised=sum(fertilised.eggs,na.rm=TRUE))

clutch.summary2$unhatched<-clutch.summary2$eggs-clutch.summary2$hatched

clutch.summary2$embryo.failure<-clutch.summary2$unhatched-clutch.summary2$unfertilised

### do "insurance" model with data with NA values replaced with infertile
library(glmmTMB)
indiv_annual_model2<-glmmTMB(cbind(hatched,unhatched)~unfertilised + (1|dam) + (1|year), zi=~unfertilised, data=clutch.summary2, family=binomial)
summary(indiv_annual_model2)
# estimate = 0.0005, std. error = 0.002, p= 0.00755, smaller estimate but result still significantl

pop.model.insurance <- glmmTMB(fertilised ~ sex.ratio + (1|dam) + (1|year) + (1|clutch), family=binomial, data=eggs2)
summary(pop.model.insurance)
# results not changed at all, barely a change in the estimate.

library(readr)
eggs2 <- read_csv("formalin_eggs_all_7_insurance_2.csv", 
                  col_types = cols(year = col_character()))
eggs2$fertilised<-as.double(eggs2$fertilised)

View(eggs2)
eggs %>%
  group_by(outcome) %>%
  summarise(n=n())

# exclude eggs which were abandoned 

eggs2 <- eggs2  %>%
  filter(stage.of.death!="not incubated")

# recreate clutch data with new fake data with NAs all replace by infertile
clutches2 <- eggs2 %>% group_by(year,dam,clutch) %>%
  summarise(eggs=n(),hatched.eggs=sum(hatched), fertilised.eggs=sum(fertilised), s.ratio=mean(sex.ratio), pop.size=mean(population.size))

clutches2$unfertilised<-clutches2$eggs - clutches2$fertilised.eggs

clutches2$unhatched<-clutches2$eggs - clutches2$hatched.eggs

clutches2<-left_join(clutches2, eggs2[,c(1,23,24)])


clutch.summary2<-clutches2%>%
  group_by(year,dam) %>%
  summarise(eggs=sum(eggs, na.rm=TRUE),hatched=sum(hatched.eggs, na.rm=TRUE),
            unfertilised=sum(unfertilised,na.rm=TRUE),fertilised=sum(fertilised.eggs,na.rm=TRUE))

clutch.summary2$unhatched<-clutch.summary2$eggs-clutch.summary2$hatched

clutch.summary2$embryo.failure<-clutch.summary2$unhatched-clutch.summary2$unfertilised

### do "insurance" model with data with NA values replaced with infertile
library(glmmTMB)
indiv_annual_model2<-glmmTMB(cbind(hatched,unhatched)~unfertilised + (1|dam) + (1|year), zi=~unfertilised, data=clutch.summary2, family=binomial)
summary(indiv_annual_model2)
# estimate = 0.0005, std. error = 0.002, p= 0.00755, smaller estimate but result still significantl

eggs2$fertilised<-as.double(eggs2$fertilised)

pop.model.insurance <- glmmTMB(fertilised ~ sex.ratio + (1|dam) + (1|year) + (1|clutch), family=binomial, data=eggs2)
summary(pop.model.insurance)
