#### import and sort data ####
rm(list = ls()) 

library(ggplot2)
library(dplyr)
library(readr)
eggs <- read_csv("formalin_eggs_all_7.csv", 
                 col_types = cols(dam = col_character(), 
                                  sample = col_character(), year = col_character()))
View(eggs)
View(eggs)

eggs$year<-as.factor(eggs$year)
eggs$cohort<-as.factor(eggs$cohort)
eggs$clutch<-as.factor(eggs$clutch)
eggs$fertilised<-as.numeric(eggs$fertilised)
eggs$outcome<-as.factor(eggs$outcome)
eggs$outcome2<-as.factor(eggs$outcome2)
eggs$outcome3<-as.factor(eggs$outcome3)

year_summaries <- read_csv("year_summaries.csv")

full_data<-

clutches <- eggs %>% group_by(year,dam,clutch) %>%
  summarise(eggs=n(),hatched.eggs=sum(hatched), fertilised.eggs=sum(fertilised), s.ratio=mean(sex.ratio), pop.size=mean(population.size))

clutches$unfertilised<-clutches$eggs - clutches$fertilised.eggs

clutches$unhatched<-clutches$eggs - clutches$hatched.eggs

clutches<-left_join(clutches, eggs[,c(1,23,24)])

## look at data



##### create table of pop size through years ####
fertility.rates<-eggs %>%
  group_by(year) %>%
  summarise(sum(fertilised, na.rm=TRUE)/length(fertilised))

#rename columns
names(fertility.rates)<-c("year", "fertility.rate")

#make same type for merge
fertility.rates$year<-as.factor(fertility.rates$year)
year_summaries$year<-as.factor(year_summaries$year)

#merge
year_summaries<-left_join(year_summaries,fertility.rates, by="year")

# scale pop size 
year_summaries$population.size<-year_summaries$population.size/100

# seperate out sex ratio and pop size for plot
sex_size<-data.frame(year_summaries$year, year_summaries$sex.ratio, year_summaries$population.size)
names(sex_size)<-c("year", "sex.ratio", "population.size")

library(reshape2)
melted_sex_size<-melt(sex_size)

#### plot sex ratio vs population size  ####
melted_sex_size1<-melted_sex_size %>%
  filter(year!="2012")
pop_sex_plot<-ggplot(data=melted_sex_size1, aes(x=year, y=value, colour=variable))+
  geom_point(aes(colour=variable), size=2)+
  geom_line(aes(colour=variable, group=variable), size=1)+
  theme_minimal()+
  xlab("Year")+
  ylab("Value")+
scale_color_manual(labels = c("Sex Ratio (males/females)", "Population Size (/100)"), 
                    values = c("#f9bd3b", "#e46464"))+
  theme(legend.title=element_blank())

pop_sex_plot  

#scale_colour_viridis_d(option="H",labels = c("Sex Ratio (males/females)", "Population Size (/100)"))
  

# test correlation between population size and sex ratio 
cor.test(year_summaries$population.size, year_summaries$sex.ratio)
# significant negative correlation, p = 0.006, r = -0.76

names(pop.size.)<-c("year","pop.size","number.females","number.males")
#sex ratio and pop size through years 

#### fertility rate vs sex ratio ####

# exclude NAs from data, make new dataframe with only variables of interest

model.eggs<-data.frame(eggs$dam, eggs$outcome,eggs$fertilised, eggs$sex.ratio, eggs$population.size, eggs$hatched)
#rename columns
names(model.eggs)<-c("dam", "outcome", "fertilised", "sex.ratio", "population.size", "hatched")
# remove NA values
model.eggs<-na.omit(model.eggs)
model.eggs$outcome<-as.factor(model.eggs$outcome)

model.eggs$fertilised<-as.factor(model.eggs$fertilised)

cdplot.infert<-cdplot(as.factor(model.eggs$fertilised) ~ model.eggs$sex.ratio, 
      ylevels=c("1","0"), 
       col = c("#f0f921", "#e16462"), 
       xlab="Sex Ratio (males/females)",
       ylab="Density Distribution", 
       ylim=c(0,1))
       #yaxlabels = c(""))

pdf(file="cdplotinfert.pdf")
model.eggs$outcome<-as.factor(model.eggs$outcome)
par(cex=1)

### hatching success vs sex ratio

cdplot.hatch<-cdplot(as.factor(model.eggs$hatched) ~ model.eggs$sex.ratio, 
                      ylevels=c("1","0"), 
                      col = c("#e16462", "#790da4"),
                      xlab="Sex Ratio (males/females)",
                      ylab="Density Distribution", 
                      ylim=c(0,1))
pdf(file="cdplothatch.pdf")
model.eggs$outcome<-as.factor(model.eggs$outcome)
par(cex=1)

#explore data
library(ggplot2)
ggplot(model.eggs, aes(x=sex.ratio,y=..count.., fill=outcome))+
  geom_density(position="fill")

ggplot(data=clutches, aes(x=s.ratio,y=(hatched.eggs/eggs)))+ 
  geom_point()+
  stat_smooth(method="lm")

#### summarise data ####

sex.ratio.<-eggs %>%
  group_by(year) %>%
  summarise(mean(sex.ratio))
names(sex.ratio.)<-c("year", "sex.ratio")

ggplot(data=year_summaries, aes(x=year, y=fertility.rate))+
  geom_col()

library(viridis)

write.csv(summary1, file="summary1.csv")
summary1<-eggs %>%
  group_by(year) %>%
  summarise(total=n())%>%
  group_by(outcome)%>%
  summarise(percent=n()/total)

summary2<-filter(eggs, outcome(! . %in%("fledged successfully", "failed nestling")) %>%
  group_by(year,outcome) %>%
  summarise(count=n()))

summary2<-left_join(summary1,summary2)
summary2$percent<-(summary2$count/summary2$total)*100

stacked.outcome.plot<-ggplot(data=subset(eggs, !is.na(outcome)), 
       aes(x=year,fill=factor(outcome, levels=c("fledged successfully", "failed nestling", "failed in late embryo development", "failed in mid embryo development",
                                                                   "failed in early embryo development", "infertile")))) + geom_bar(position="fill")+
  theme_minimal()+
  ylab("Proportion of Eggs")+
  labs(fill="Outcome")+
  scale_fill_viridis_d(labels=c("Fledged Successfully", "Nestling Mortality", "Late Embryo Mortality", "Mid Embryo Mortality", "Early Embryo Mortality", "Infertile"),
  option="C", direction=1)+
  
  theme(axis.title.x = element_blank(),
        axis.ticks.x = element_blank(),
        axis.text.x = element_blank(),
        legend.title = element_blank())

stacked.outcome.plot

library(cowplot)

plot_grid(stacked.outcome.plot,pop_sex_plot, nrow=2, align="v")

# change levels to get order right in plot

eggs$outcome<-as.factor(eggs$outcome)

levels(eggs$outcome)<-c("fledgling","nestling","late development","mid development","early development","infertile" )

#### plot to compare what was thought of as infertile before ####

beforeandnow <- read_csv("before and now summary3.csv")

beforeandnow$cause<-as.factor(beforeandnow$cause)

actualassumedplot<-ggplot(data=beforeandnow, 
       aes(x=as.factor(year),y=count,
           fill=factor(cause, levels=c("unhatched eggs","previously assumed infertile", "truly infertile"))))+ 
  geom_col(position=position_dodge(width=0.7), width=1)+
  theme_minimal()+
  theme(legend.title=element_blank(),
        axis.title.x = element_blank(),
        axis.ticks.x = element_blank(),
        axis.text.x = element_blank())+
  xlab("Year")+
  ylab("Count")+
  scale_fill_manual(labels = c("Total Unhatched Eggs","Assumed Infertile/Unknown", "Actually Infertile"), 
                     values = c("#780fa5", "#e46464", "#f0f921"))

actualassumedplot
library(cowplot)
# make plot with all three panes
plot_grid(actualassumedplot,stacked.outcome.plot,pop_sex_plot, nrow=3, align="v", labels="auto")

#### plot of sex ratios at every stage of failures ####

sex<-data.frame(eggs$outcome2,eggs$sex)
names(sex)<-c("outcome2","sex")
sex<-na.omit(sex)

sex<-sex %>%
  group_by(outcome2,sex) %>%
  summarise(n=n())

sex<-sex[!(sex$outcome==("infertile")),]


p <- ggplot()
p <- p + geom_col(data=sex, aes(x=outcome2, y=n, fill=sex), position="fill")
p <- p + scale_fill_manual(values=c("#0d0887", "#b12a90"), labels=c("Female","Male"))
p <- p + geom_hline(yintercept=0.5, linetype="dashed", color = "#f0f921", size=1)
#p <- p + geom_point(data = filter(outcomeandsex, sex=="F"),colour="#f9bd3b",size=3,aes(x=outcome, y=sex_ratio))
#p <- p + geom_line(data = filter(outcomeandsex, sex=="F"),colour="#f9bd3b",size=1.5,group=1, mapping= aes(x=outcome, y=sex_ratio, colour="#f9bd3b")) 
#p <- p + scale_y_continuous("Proportion of Mortality", sec.axis = sec_axis(~ . * 1, name = "Sex Ratio(males/females)"))
p <- p + theme_minimal() + scale_x_discrete(name="Outcome",labels=c("Early EM","Mid EM","Late EM","Nestling Mort.", "Fledling Mort.", "Overall Mort."))
p <- p + theme(legend.title=element_blank(),
      axis.title.x = element_blank(),
      axis.ticks.x = element_blank(),
      axis.text.x = element_blank())
p <- p + theme(axis.text.y = element_text(margin = margin(b=3)))
p <- p + ylab("Proportion")

sexratios2<-eggs %>%
  group_by(outcome3,sex,year) %>%
  summarise(n=n())


sexratios1<-eggs %>%
  group_by(sex,year) %>%
  summarise(n=n())e
write.csv(sexratios1, "sexratios1.csv")

p <- ggplot()
p <- p + geom_col(data=filter(outcomeandsex,sex=="F"), aes(x=outcome, y=count, fill=outcome), position=position_nudge(x=0.35),width=0.5)
p <- p + geom_col(data=filter(outcomeandsex,sex=="M"), aes(x=outcome, y=count), position=position_nudge(x=-0.25),width=0.5)
p <- p + scale_fill_manual(name="Sex",values=c("#0b0b83","#b12a90"))
p <- p + geom_point(data = filter(outcomeandsex, sex=="F"),colour="#f9bd3b",size=2,aes(x=outcome, y=sex_ratio))
p <- p + geom_line(data = filter(outcomeandsex, sex=="F"),colour="#f9bd3b",size=1,group=1, mapping= aes(x=outcome, y=sex_ratio, colour="#f9bd3b")) 
p <- p +  scale_y_continuous("Proportion", sec.axis = sec_axis(~ . * 1, name = "Sex Ratio(M/F)"))
p <- p + theme_minimal()
p <- p + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p <- p + xlim(-2,10)
p

ggplot(data=outcomeandsex,
       aes(x=outcome, y=count, fill=sex))+
  geom_col(position="fill")

  
#  ylim(0,0.75)

### EPP data and plots

epp<-data.frame(eggs$outcome2,eggs$paternity)
names(epp)<-c("outcome2","paternity")
epp<-na.omit(epp)

epp<-epp %>%
  group_by(outcome2,paternity) %>%
  summarise(n=n())

### EPP plot (section of 3 panel plot) ####
plot1<-ggplot(data=epp, aes(x=outcome2,y=n,fill=paternity))+
  geom_col(position="fill")+
  theme_minimal()+
  theme(legend.title = element_blank())+
  xlab("Outcome")+
  ylab("Proportion")+
  theme(legend.title=element_blank(),
        axis.text.x = element_text(size = 12))+
 scale_x_discrete(labels= c("Early EM", "Mid EM", "Late EM", "Hatched"))+
 geom_hline(yintercept=0.5, linetype="dashed", color = "#f0f921", size=1)+
#theme(axis.text.x = element_text(angle = 325,vjust = 0., hjust=0.4))+
 scale_fill_manual(values=c("#6a00a8", "#fca636"),labels=c("EPP","WPP"))
plot1


### inbreeding of early embryos 

#### INBREEDING ####
### calculate inbreeding coefficients ###

library(readr)
ped <- read_csv("Ped for R 3.csv", 
                col_types = cols(dam = col_character(), 
                                 label = col_character(), sire = col_character()))
View(ped)

library(pedigreemm)
library(dplyr)
library(pedigree)

ped.1<-pedigreemm::pedigree(sire=ped$sire, dam=ped$dam, label=ped$label) 

ped.2<-pedigreemm::inbreeding(ped.1)

f.values<-data.frame(ped.2)

ped$f.values<-f.values$ped.2

## list of individuals who have minimum of two generates (six close relatives i.e dam, sire and materanal and paternal grandparents in ped - this is needed for accurate f values)
ped_indivs <- read_csv("list of pedigree individuals for inbreeding.csv")

ped_indivs<-left_join(ped_indivs,ped[,c(1,4)])


# put female inbreeding coeffs in to full data

inbreeding_values_2<-data.frame(ped_indivs$label, ped_indivs$f.values)

colnames(inbreeding_values_2)<-c("sample", "f.value.")

inbreeding_values_2$sample<-as.character(inbreeding_values_2$sample)

eggs<-left_join(eggs, inbreeding_values_2)

inbreed(ped1)

#take out years before 2013 because i'm not sure of reliability of estimates, genotyping started not long before that

ggplot(data=eggs, aes(y=f.value.))+
  + geom_histogram()+
  + facet_wrap(~year)

eggs<-within(eggs, f.value.[year == '2010' | year == '2011'] <- NA)

summary(eggs$f.value.)

#hasn't really changed much... 

#plot inbreeding of different failure stages

library(ggplot2)

plotdata<-data.frame(eggs$sample,eggs$outcome2, eggs$outcome3 ,eggs$f.value.,eggs$sex,eggs$year)

names(plotdata)<-c("sample", "outcome2", "outcome3","f.value.", "Sex", "year")

plotdata$outcome2<-as.factor(plotdata$outcome2)

levels(plotdata$outcome2)


plotdata<-na.omit(plotdata)

library(ggplot2)



plot2
library(dplyr)
plotdata1<-plotdata %>%
  group_by(outcome2,Sex)%>%
  summarise(mean_inb=mean(f.value.),n=n(),se=sd(f.value.)/sqrt(n()))

plot2a<-ggplot(data=plotdata1, aes(x=outcome2,y=mean_inb, colour=Sex))+
  geom_point(position=position_dodge(width=0.75),size=2)+
  geom_errorbar(aes(ymin=mean_inb-se,ymax=mean_inb+se),position=position_dodge(width=0.75),width=0.5,size=0.5)+
  theme_minimal()+
  scale_x_discrete(labels= c("Early EM", "Mid EM", "Late EM", "Hatched"))+
  scale_colour_manual(values=c("#0c0b84", "#b12a90"),labels=c("Female","Male"))+  xlab("Outcome")+
  theme(legend.title=element_blank())+
  theme(legend.title=element_blank(),
        axis.title.x = element_blank(),
        axis.ticks.x = element_blank(),
        axis.text.x = element_blank())+
  ylab("Inbreeding Coefficient (F)")+ylim(0,0.04)

plot2a

plotdata2<-eggs %>%
  group_by(paternity)%>%
  summarise(mean_inb=mean(f.value., na.rm=TRUE),n=n(),se=sd(f.value., na.rm=TRUE)/sqrt(n()))

plotdata2<-na.omit(plotdata2)

plotdata3<-eggs %>%
  group_by(paternity,outcome2)%>%
  summarise(mean_inb=mean(f.value., na.rm=TRUE),n=n(),se=sd(f.value., na.rm=TRUE)/sqrt(n()))

plotdata3<-na.omit(plotdata3)

plot3a<-ggplot(data=plotdata3, aes(x=outcome2,y=mean_inb, colour=paternity))+
  geom_point(position=position_dodge(width=0.75),size=2)+
  geom_errorbar(aes(ymin=mean_inb-se,ymax=mean_inb+se),position=position_dodge(width=0.75),width=0.5,size=0.5)+
  theme_minimal()+
  scale_x_discrete(labels= c("Early EM", "Mid EM", "Late EM", "Hatched"))+
  scale_colour_manual(values=c("#790da4", "#e16462"),labels=c("EPP","WPP"))+  xlab("Outcome")+
  theme(legend.title=element_blank(), axis.text.x = element_text(size = 12))+
  ylab("Inbreeding Coefficient (F)")+ylim(0,0.04)
plot3a

#sample size 

plotdata %>%
  group_by(outcome2) %>%
  summarise(count=n())

eggs %>%
  group_by(outcome2) %>%
  summarise(count=n())

library(cowplot)

plot_grid(p,plot2a,plot1,nrow=3, align="hv", labels="auto")

## summary of inbreeding values 

mean(eggs$f.value., na.rm=TRUE)
sd(eggs$f.value., na.rm=TRUE)
length(eggs$f.value.)

eggs%>%
  group_by(outcome3,sex)%>%
  summarise(n=n())

plotdata %>%
  group_by(outcome2)%>%
  summarise(mean_inb=mean(f.value.),n=n())


## hatching failure and infertility ####

clutch.summary<-clutches%>%
  group_by(year,dam) %>%
  summarise(eggs=sum(eggs, na.rm=TRUE),hatched=sum(hatched.eggs, na.rm=TRUE),
            unfertilised=sum(unfertilised,na.rm=TRUE),fertilised=sum(fertilised.eggs,na.rm=TRUE))

clutch.summary$unhatched<-clutch.summary$eggs-clutch.summary$hatched

clutch.summary$embryo.failure<-clutch.summary$unhatched-clutch.summary$unfertilised

indiv_annual_data<-data.frame(eggs$year, eggs$dam, eggs$fertilised, eggs$hatched)
names(indiv_annual_data)<-c("year","dam","fertilised","hatched")
indiv_annual_data<-na.omit(indiv_annual_data)

### embryo mortality vs total hatching failure. 

fertility.rates$embryo.death.rate<-fertility.rates$hatching.failure.rates-fertility.rates$infertility

cor.test(fertility.rates$embryo.death.rate,fertility.rates$hatching.failure.rates)

hist(clutches$unhatched)
hist(clutches$hatched.eggs)
hist(clutches$unfertilised)

### final individual annual hatching success vs fertilisation rate model
indiv_annual_model<-glmmTMB(cbind(hatched,unhatched)~unfertilised + (1|dam) + (1|year), zi=~unfertilised, data=clutch.summary, family=binomial)
summary(indiv_annual_model)

indiv_annual_model<-glmmTMB(hatched~fertilised + (1|year)+(1|dam),  data=na.omit(eggs), family=nbinom1(link="log"))
summary(indiv_annual_model)
fixef(indiv_annual_model)
# what family? variance bigger then mean?

var(clutch.summary$hatched)
mean(clutch.summary$hatched)
hist(clutch.summary$hatched/clutch.summary$unhatched)
#variance is larger than the mean = negative binomial distribution for counts
# but we have zero inflation so include zero inflation component in model

DHARMa::plotQQunif(indiv_annual_model)
DHARMa::testOutliers(indiv_annual_model, type='bootstrap')
DHARMa::plotResiduals(indiv_annual_model)
DHARMa::testDispersion(indiv_annual_model)

hist(clutch.summary$embryo.failure)





## what if all 33 eggs with no fertility status were infertile/early embryo mortality? ####

eggs2<-eggs

# replace NA values in outcome with infertile
library(tidyr)
eggs2<-replace_na(eggs2, list(outcome="infertile",outcome2="infertile",outcome3="infertile"))

eggs2 %>%
 group_by(outcome) %>%
  summarise(n=n())

# exclude eggs which were abandoned 

eggs2 <- eggs2  %>%
  filter(stage.of.death!="not incubated")

# recreate clutch data with new fake data with NAs all replace by infertile
clutches2 <- eggs2 %>% group_by(year,dam,clutch) %>%
  summarise(eggs=n(),hatched.eggs=sum(hatched), fertilised.eggs=sum(fertilised), s.ratio=mean(sex.ratio), pop.size=mean(population.size))

clutches2$unfertilised<-clutches2$eggs - clutches2$fertilised.eggs

clutches2$unhatched<-clutches2$eggs - clutches2$hatched.eggs

clutches2<-left_join(clutches2, eggs2[,c(1,23,24)])


clutch.summary2<-clutches2%>%
  group_by(year,dam) %>%
  summarise(eggs=sum(eggs, na.rm=TRUE),hatched=sum(hatched.eggs, na.rm=TRUE),
            unfertilised=sum(unfertilised,na.rm=TRUE),fertilised=sum(fertilised.eggs,na.rm=TRUE))

clutch.summary2$unhatched<-clutch.summary2$eggs-clutch.summary2$hatched

clutch.summary2$embryo.failure<-clutch.summary2$unhatched-clutch.summary2$unfertilised

### do "insurance" model with data with NA values replaced with infertile
library(glmmTMB)
indiv_annual_model2<-glmmTMB(cbind(hatched,unhatched)~unfertilised + (1|dam) + (1|year), zi=~unfertilised, data=clutch.summary2, family=binomial)
summary(indiv_annual_model2)
# estimate = 0.0005, std. error = 0.002, p= 0.00755, smaller estimate but result still significantl

pop.model.insurance <- glmmTMB(fertilised ~ sex.ratio + (1|dam) + (1|year) + (1|clutch), family=binomial, data=eggs2)
summary(pop.model.insurance)
# results not changed at all, barely a change in the estimate.

library(readr)
eggs2 <- read_csv("formalin_eggs_all_7_insurance_2.csv", 
                  col_types = cols(year = col_character()))
eggs2$fertilised<-as.double(eggs2$fertilised)

View(eggs2)
eggs %>%
  group_by(outcome) %>%
  summarise(n=n())

# exclude eggs which were abandoned 

eggs2 <- eggs2  %>%
  filter(stage.of.death!="not incubated")

# recreate clutch data with new fake data with NAs all replace by infertile
clutches2 <- eggs2 %>% group_by(year,dam,clutch) %>%
  summarise(eggs=n(),hatched.eggs=sum(hatched), fertilised.eggs=sum(fertilised), s.ratio=mean(sex.ratio), pop.size=mean(population.size))

clutches2$unfertilised<-clutches2$eggs - clutches2$fertilised.eggs

clutches2$unhatched<-clutches2$eggs - clutches2$hatched.eggs

clutches2<-left_join(clutches2, eggs2[,c(1,23,24)])


clutch.summary2<-clutches2%>%
  group_by(year,dam) %>%
  summarise(eggs=sum(eggs, na.rm=TRUE),hatched=sum(hatched.eggs, na.rm=TRUE),
            unfertilised=sum(unfertilised,na.rm=TRUE),fertilised=sum(fertilised.eggs,na.rm=TRUE))

clutch.summary2$unhatched<-clutch.summary2$eggs-clutch.summary2$hatched

clutch.summary2$embryo.failure<-clutch.summary2$unhatched-clutch.summary2$unfertilised

### do "insurance" model with data with NA values replaced with infertile
library(glmmTMB)
indiv_annual_model2<-glmmTMB(cbind(hatched,unhatched)~unfertilised + (1|dam) + (1|year), zi=~unfertilised, data=clutch.summary2, family=binomial)
summary(indiv_annual_model2)
# estimate = 0.0005, std. error = 0.002, p= 0.00755, smaller estimate but result still significantl

eggs2$fertilised<-as.double(eggs2$fertilised)

pop.model.insurance <- glmmTMB(fertilised ~ sex.ratio + (1|dam) + (1|year) + (1|clutch), family=binomial, data=eggs2)
summary(pop.model.insurance)


# models

## inbreeding

inb.model.data2<-data.frame(eggs$year,eggs$dam,eggs$sample,eggs$paternity,eggs$sex,eggs$f.value., eggs$outcome2)

names(inb.model.data2)<-c("year", "dam", "sample","paternity", "sex", "f.value.", "outcome2")

inb.model.data2<-na.omit(inb.model.data2)

inb.model2.3 <- glmmTMB(f.value. ~ paternity + (1|dam) + (1|year),
                        family=tweedie, data=inb.model.data2)

DHARMa::plotQQunif(inb.model2.3)
DHARMa::plotResiduals(inb.model2.3)
DHARMa::testDispersion(inb.model2.3)
summary(inb.model2.3)
Anova.glmmTMB(inb.model2.3)

library()
inb.model2.4 <- glmer(outcome2 ~ paternity + f.value.  +sex+ (1|dam) + (1|year),
                        family=tweedie, data=inb.model.data2)


## inbreeding and paternity
